# decu.cfg
# Default decu configuration file.


###################################################
# Section Script                                  #
# --------------                                  #
# Configuration options used in the Script class. #
###################################################
[Script]

# All the *_dir options contain the subdirectories that will be created
# build with decu init.

# Raw data files directory.
data_dir = data/

# Generated data files directory.
gendata_dir = data/

# Results generated by decu.experiment-decorated methods.
results_dir = results/

# Source code directory.
scripts_dir = src/

# Plots generated with decu.figure-decorated methods.
figures_dir = pics/

# All the *_file options contain templates for the names of the files that
# decu generates automamtically. Note that we use a double dash ('--') as
# delimiter. None of the strings to be interpolated into the file name
# (e.g., time, module_name, exp_name, etc) can have the ('--') as a
# substring.

# Template for result file names generated with decu.experiment-decorated
# methods.
result_file = ${time}--${module_name}--${exp_name}--${run}

# Template for generated data file names.
gendata_file = ${time}--${module_name}--${data_name}--${run}

# Template for plot files generated by decu.figure-decorated methods that
# do not supply the 'suffix' parameter.
figure_wo_suffix_file = ${time}--${module_name}--${fig_name}.${ext}

# Template for plot files generated by decu.figure-decorated methods that
# supply the 'suffix' parameter.
figure_w_suffix_file = ${time}--${module_name}--${fig_name}--${suffix}.${ext}

# Format of the figures generated by decu.figure-decorated
# methods. figure_fmt must equal the exension, without the dot ('.') of the
# output files.
figure_fmt = png


#######################################################
# Section experiment                                  #
# ------------------                                  #
# Configuration options for the experiment decorator. #
#######################################################
[experiment]

# Log record output before starting an experiment.
start_msg = Starting $exp_name--$run with $params.

# Log record output after finishing an experiment.
end_msg = Finished $exp_name--$run. Took ${elapsed}s.

# Log record output when writing experiment results to disk.
write_msg = Wrote results of $exp_name--$run to $outfile.


###################################################
# Section figure                                  #
# ---------------                                 #
# Configuration options for the figure decorator. #
###################################################
[figure]

# Log record output when writing plot files to disk.
write = Wrote figure $fig_name to $outfile.


####################################################
# Section gendata                                  #
# ---------------                                  #
# Configuration options for the gendata decorator. #
####################################################
[gendata]

# Log record output when writing generated data files to disk.
write = Wrote data $data_name#$data_id to $outfile.


######################################################
# Section logging                                    #
# --------------                                     #
# Configuration options for the decu.logging module. #
######################################################
[logging]

# Logs directory.
logs_dir = logs/

# Format of each record in a log file. This is directly passed to the
# 'format' parameter of logging.basicConfig.
log_fmt = [%(asctime)s]%(levelname)s: %(message)s

# Format for the timie and date part of each log record. This is directly
# passed to the 'datefmt' parameter of logging.basicConfig.
time_fmt = %H:%M:%S

# Template for log file names.
# See the comment about *_file options in section Script.
log_file = ${time}--${module_name}.txt



###########################################################
# Section inspect                                         #
# ---------------                                         #
# Configuration options for the inspect terminal command. #
###########################################################
[inspect]

# Python code to be run inside iPython when decu is invoked with the
# inspect command. Lines must be separated by newlines, not semicolons
# (';'). These lines will be shown to the user before starting the iPython
# session.
py_cmd_imports = import decu
py_cmd_script = import ${dir}.${script} as ${script}
	        script = ${script}.${cls}()

# Python code to be run inside iPython when in inspect mode. Lines must be
# separated by newlines, not semicolons (';'). These lines will not be
# shown to the user, but will instead be replaced by the contents of the
# noshow_replace option instead.
py_cmd_noshow = result = decu.io.read(${files}[0]) if len(${files}) == 1 else [decu.io.read(file) for file in ${files}]

# Option that replaces that lines that will not be shown to the user.
noshow_replace = # loaded ${var}
